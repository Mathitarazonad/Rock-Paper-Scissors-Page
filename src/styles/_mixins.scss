@use 'variables' as *;
@use 'functions' as *;

@mixin gamemode-btn($bg-color, $border-color) {
  border: 5px solid $border-color;
  border-radius: 20px;
  padding: 1rem;
  font-size: 1.4rem;
  font-weight: 700;
  color: $border-color;
  background-color: $bg-color;
  box-shadow: 0 0 3px $border-color, 0 0 3px $border-color inset;
  cursor: pointer;
}

@mixin hand($hand-type, $size) {
  background-color: white;
  border: 15px solid getLast($hand-type);
  border-radius: 50%;
  padding: 1.5rem;
  width: $size;
  height: $size;
  min-width: $size;
  min-height: $size;
  position: relative;
  box-shadow: 0 4px 0 1px getInitial($hand-type);
  display: flex;
  justify-content: center;
  align-items: center;

  & img {
    width: 100%;
  }

  @media (min-width: 750px) {
    border-width: 20px;
    box-shadow: 0 6px 0 1px getInitial($hand-type);

    & img {
      width: 75%;
    }

    
  }
}

@mixin bonus-btns-position($top: 0px, $right: 0px, $bottom: 0px, $left: 0px) {
  position: absolute;
  top: $top;
  left: $left;
  right: $right;
  bottom: $bottom;
  margin: auto;
}


// Buttons pulse animation part - Capital letter means the size
@keyframes btnPulseAnimationSd {
  25% {
    box-shadow: 0 0 0 40px, rgba(255, 255, 255, 0.07);
  }
  50% {
    box-shadow: 0 0 0 40px rgba(255, 255, 255, 0.07),
      0 0 0 70px rgba(255, 255, 255, 0.06);
  }
  100% {
    box-shadow: 0 0 0 40px rgba(255, 255, 255, 0.07),
      0 0 0 70px rgba(255, 255, 255, 0.06),
      0 0 0 100px rgba(255, 255, 255, 0.03);
  }
}

@keyframes btnPulseAnimationMd {
  25% {
    box-shadow: 0 0 0 60px rgba(255, 255, 255, 0.07);
  }
  50% {
    box-shadow: 0 0 0 60px rgba(255, 255, 255, 0.07),
      0 0 0 100px rgba(255, 255, 255, 0.06);
  }
  100% {
    box-shadow: 0 0 0 60px rgba(255, 255, 255, 0.07),
      0 0 0 100px rgba(255, 255, 255, 0.06),
      0 0 0 140px rgba(255, 255, 255, 0.03);
  }
}

@keyframes btnPulseAnimationBd {
  25% {
    box-shadow: 0 0 0 80px rgba(255, 255, 255, 0.07);
  }
  50% {
    box-shadow: 0 0 0 80px rgba(255, 255, 255, 0.07),
      0 0 0 150px rgba(255, 255, 255, 0.06);
  }
  100% {
    box-shadow: 0 0 0 80px rgba(255, 255, 255, 0.07),
      0 0 0 150px rgba(255, 255, 255, 0.06),
      0 0 0 210px rgba(255, 255, 255, 0.03);
  }
}

//Computer btn going bigger animation
@keyframes computerBtnAnimation {
  0% {
    opacity: 0;
    transform: scale(0);
  }
  25% {
    opacity: 0.25;
    transform: scale(0.25);
  }
  50% {
    opacity: 0.5;
    transform: scale(0.5);
  }
  75% {
    opacity: 0.75;
    transform: scale(0.75);
  }
  100% {
    opacity: 1;
    transform: scale(1);
  }
}

//Show rules animations
@keyframes resultsAnimationSd {
  0% {
    transform: translateY(-100%);
    opacity: 0;
  }

  50% {
    transform: translateY(-50%);
    opacity: 0.25;
  }

  75% {
    transform: translateY(-25%);
    opacity: 0.5;
  }

  100% {
    transform: translateY(0%);
    opacity: 1;
  }
}

@keyframes resultsAnimationBd {
  0% {
    display: none;
    opacity: 0;
  }
  
  25% {
    opacity: 0.25;
  }

  50% {
    display: flex;
    opacity: 0.5;
  }

  100% {
    opacity: 1;
  }
}

@keyframes userBtnMovesX {
  0% {
    transform: translateX(65%);
  }
  100% {
    transform: translateX(0%);
  }
}

@keyframes computerBtnMovesX {
  0% {
    transform: translateX(-65%);
  }
  100% {
    transform: translateX(0%);
  }
}


@mixin btn-pulse() {
  @media (max-width: 750px) {
    animation: btnPulseAnimationSd 0.75s linear both 0.6s;
  }
  @media (min-width: 750px) {
    animation: btnPulseAnimationMd 0.75s linear both 0.6s;
  }
  @media (min-width: 1200px) {
    animation: btnPulseAnimationBd 0.75s linear both 0.6s
  }
}

@mixin computerBtnGrowing() {
  animation: computerBtnAnimation 0.5s linear both;
}

@mixin showResults($time) {
  @media (max-width: 1000px) {
    animation: resultsAnimationSd $time linear both 0.75s
  }
  @media (min-width: 1000px) {
    animation:resultsAnimationBd $time linear both .8s;
  }
}

@mixin userBtnAnimationX () {
  animation: userBtnMovesX .5s linear both .5s;
}

@mixin computerBtnAnimationX () {
  animation: computerBtnMovesX .5s linear both .5s;
}
